{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "String"
        },
        "adminPassword": {
            "type": "SecureString"
        },
        "AzureUserName": {
            "type": "String"
        },
        "AzurePassword": {
            "type": "SecureString"
        },
        "DeploymentID": {
            "type": "String"
        }
    },
  "variables": {
     "AzureSubscriptionID": "[subscription().subscriptionId]",
    "AzureTenantID": "[subscription().tenantId]",
    "rgName": "[resourceGroup().name]",
    "addressPrefix": "10.0.0.0/16",
    "networkInterfaceName": "labvm-nic",
    "networkSecurityGroupName": "labvm-nsg",
    "vmName": "[concat('labvm-',parameters('DeploymentID'))]",
    "publicIpAddressDNSName": "[concat(variables('vmName'), '-ip')]",
    "publicIpAddressName": "[concat('labvm-pip', uniqueString(resourceGroup().id))]",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',variables('virtualNetworkName'), variables('subnetName'))]",
    "virtualMachineSize": "Standard_D16_v3",
    "virtualNetworkName": "labvm-vnet",
    "location": "[resourceGroup().location]",
    "adlsStorageAccountName": "[concat('adlsldmastore', parameters('deploymentId'))]",
    "defaultDataLakeStorageFilesystemName": "ldma-target",
    "dbworkspaceName": "[parameters('DeploymentID')]",
    "pricingTier": "Standard",
    "managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
    "managedResourceGroupName": "[concat('databricks-rg-', variables('resourceNamePrefix'), '-', parameters('deploymentId'))]",
    "resourceNamePrefix": "WANdisco"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('adlsStorageAccountName')]",
      "location": "[variables('location')]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": "true",
        "isHnsEnabled": "true",
        "largeFileSharesState": "Disabled"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "[concat('default/', variables('defaultDataLakeStorageFilesystemName'))]",
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'))]"
          ]
        },
         {
            "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-06-01",
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            },
            "dependsOn": [
                 "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'))]"
            ]
        },        
        {
            "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
            "type": "Microsoft.Storage/storageAccounts/fileservices",
            "apiVersion": "2021-06-01",
            "properties": {
                "shareDeleteRetentionPolicy": {
                    "enabled": false
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'))]",
                "[concat(concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName')), '/blobServices/default')]"
            ]
        } 
      ]
    },
    {
      "type": "Microsoft.Databricks/workspaces",
      "apiVersion": "2018-04-01",
      "name": "[variables('dbworkspaceName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[variables('pricingTier')]"
      },
      "properties": {
        "ManagedResourceGroupId": "[variables('managedResourceGroupId')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-04-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2017-08-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIpAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('publicIpAddressDNSName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ],
      "plan": {
        "name": "ldma-try-img",
        "product": "ldma-try-img",
        "publisher": "wandisco"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "wandisco",
            "offer": "ldma-try-img",
            "sku": "ldma-try-img",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage",
            "name": "[concat(variables('vmName'), '-osdisk')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "osProfile": {
          "computerName": "wandisco-ldma",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-06-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 110,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
             {
            "name": "Port_8080",
            "properties": {
              "priority": 120,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8080"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    }
  ],
    "outputs": {
        "VM Admin Username": {
            "type": "String",
            "value": " wandisco"
        },
        "VM Admin Password": {
            "type": "String",
            "value": "Wandisco123!"
        },
        "VM DNS Name": {
            "type": "String",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]"
        }
    }
}
